{
    "docs": [
        {
            "location": "/", 
            "text": "taskcat\n\n\n\n\nversion = '0.1.29'\nThis program requires python2 \n\n\n\n\nWhat is taskcat?\n\n\nTaskCat is a python Class that helps deploy your cloudformation templates in multiple regions. You can use TaskCat by importing the module and creating a TaskCat object. \n\n\n\n\nThis repo example code to help you get started.\n\n\n\n\nInstalling taskcat module via pip\n\n\nsudo pip install taskcat\n\n\n\n\ntaskcat documentation\n\n\nSetting up Test Cases\n\n\nTo setup taskcat test tests is a two step process:\n\n Step 1 Define your test in the config.ymal\n\n Step 2 Build a json input file for your cloudformation template.\n\n\nStep 1 Creating a config.ymal\n\n\nYou can generate a sample config.ymal by running \n./tcat.py -ey\n\nThe followung command will create a sample config.ymal\n\n\n./tcat.py -ey | egrep -v '#|^$'  \nconfig.ymal\n\n\n\n\nOpen the file with and editor and update the filenames to match your need. (See section on working with the ymal file)\n\n\nStep 2 Building a json input file\n\n\nThe example below shows an input file for a stack that requires two parms \nKeyPair\n and \nInstanceType\n\n\n\n    [{\n        \nParameterKey\n: \nKeyPair\n,\n        \nParameterValue\n: \nmykey\n\n    }, {\n        \nParameterKey\n: \nInstanceType\n,\n        \nParameterValue\n: \nt2.small\n\n    }]\n\n\n\n\nExample code to instantiate TaskCat\n\n\n\n\nIn the repo you will find tcat.py (This file contain a example of how to create a taskcat object)\nYou can either download from the repo or copy and paste the following code to a file called \ntcat.py\n\n\n\n\n#!/usr/bin/env python\n# authors:\n# tonynv,sancard,sshvans\n# License Apaache 2.0\n#\n# Purpose: This program (tcat) is a caloudformation testing tool\n# Tests can defined in a configuration yaml (config.yml)\n# @TODO\n        # system level configuration (sys will override repo configs)\n        # if os.path.isfile(sys_yml):\n        # tcat.load_sysymal(sys_yml)\n\nfrom taskcat import TaskCat\nimport yaml\n\ndef main():\n    tcat_obj = TaskCat()\n    tcat_obj.welcome('taskcat.io')\n    # Initalize cli interface\n    # @TODO Add RestFull Interface\n    args = tcat_obj.interface\n    # Init aws api and set default auth method\n    tcat_obj.set_config(args.config_yml)\n    # tcat_obj.set_config('ci/config.yml')\n    # Get API Handle - Try all know auth\n    tcat_obj.aws_api_init(args)\n\n# Run in ymal mode (Batch Test execution)\n# --Begin\n# Check for valid ymal and required keys in config\n    if args.config_yml is not None:\n        print \n[TSKCAT] : Mode of operation: \\t [ymal-mode]\n\n        print \n[TSKCAT] : Configuration yml: \\t [%s]\n % args.config_yml\n\n\n        test_list = tcat_obj.validate_yaml(args.config_yml)\n\n# Load ymal into local tcat config\n        with open(tcat_obj.get_config(), 'r') as cfg:\n            tcat_cfg = yaml.safe_load(cfg.read())\n        cfg.close()\n\n        tcat_obj.s3upload(tcat_cfg)\n        tcat_obj.validate_template(tcat_cfg, test_list)\n        tcat_obj.validate_parameters(tcat_cfg, test_list)\n        stackinfo = tcat_obj.stackcreate(tcat_cfg, test_list, 'tonyv')\n        tcat_obj.get_stackstatus(stackinfo , 5)\n\n# --End\n# Finish run in ymal mode\n\nmain()\n\n\n\n\nTo run taskcat\n\n\npython tcat.py \n\n\n\n\n\n\nSee below for available flags (you need to pass as input -c at minimum)\n\n\n\n\nTaskCat CLI Flags\n\n\n  -h, --help   show this help message and exit\n  -c CONFIG_YML, --config_yml CONFIG_YML [Configuration yaml] Read configuration from config.yml\n  -P BOTO_PROFILE, --boto-profile BOTO_PROFILE Authenticate using boto profile\n  -A AWS_ACCESS_KEY, --aws_access_key AWS_ACCESS_KEY AWS Access Key\n  -S AWS_SECRET_KEY, --aws_secret_key AWS_SECRET_KEY AWS Secret Key\n  -ey, --example_yaml  Prints out example yaml\n  -v, --verbose  Enables verbosity\n\n\n\n\nHelp\n\n\nIf you need help you can reach out to via tonynv@amazon.com\n\n\n\nEnjoy!", 
            "title": "Home"
        }, 
        {
            "location": "/#taskcat", 
            "text": "version = '0.1.29'\nThis program requires python2", 
            "title": "taskcat"
        }, 
        {
            "location": "/#what-is-taskcat", 
            "text": "TaskCat is a python Class that helps deploy your cloudformation templates in multiple regions. You can use TaskCat by importing the module and creating a TaskCat object.    This repo example code to help you get started.", 
            "title": "What is taskcat?"
        }, 
        {
            "location": "/#installing-taskcat-module-via-pip", 
            "text": "sudo pip install taskcat", 
            "title": "Installing taskcat module via pip"
        }, 
        {
            "location": "/#taskcat-documentation", 
            "text": "", 
            "title": "taskcat documentation"
        }, 
        {
            "location": "/#setting-up-test-cases", 
            "text": "To setup taskcat test tests is a two step process:  Step 1 Define your test in the config.ymal  Step 2 Build a json input file for your cloudformation template.", 
            "title": "Setting up Test Cases"
        }, 
        {
            "location": "/#step-1-creating-a-configymal", 
            "text": "You can generate a sample config.ymal by running  ./tcat.py -ey \nThe followung command will create a sample config.ymal  ./tcat.py -ey | egrep -v '#|^$'   config.ymal  Open the file with and editor and update the filenames to match your need. (See section on working with the ymal file)", 
            "title": "Step 1 Creating a config.ymal"
        }, 
        {
            "location": "/#step-2-building-a-json-input-file", 
            "text": "The example below shows an input file for a stack that requires two parms  KeyPair  and  InstanceType  \n    [{\n         ParameterKey :  KeyPair ,\n         ParameterValue :  mykey \n    }, {\n         ParameterKey :  InstanceType ,\n         ParameterValue :  t2.small \n    }]", 
            "title": "Step 2 Building a json input file"
        }, 
        {
            "location": "/#example-code-to-instantiate-taskcat", 
            "text": "In the repo you will find tcat.py (This file contain a example of how to create a taskcat object)\nYou can either download from the repo or copy and paste the following code to a file called  tcat.py   #!/usr/bin/env python\n# authors:\n# tonynv,sancard,sshvans\n# License Apaache 2.0\n#\n# Purpose: This program (tcat) is a caloudformation testing tool\n# Tests can defined in a configuration yaml (config.yml)\n# @TODO\n        # system level configuration (sys will override repo configs)\n        # if os.path.isfile(sys_yml):\n        # tcat.load_sysymal(sys_yml)\n\nfrom taskcat import TaskCat\nimport yaml\n\ndef main():\n    tcat_obj = TaskCat()\n    tcat_obj.welcome('taskcat.io')\n    # Initalize cli interface\n    # @TODO Add RestFull Interface\n    args = tcat_obj.interface\n    # Init aws api and set default auth method\n    tcat_obj.set_config(args.config_yml)\n    # tcat_obj.set_config('ci/config.yml')\n    # Get API Handle - Try all know auth\n    tcat_obj.aws_api_init(args)\n\n# Run in ymal mode (Batch Test execution)\n# --Begin\n# Check for valid ymal and required keys in config\n    if args.config_yml is not None:\n        print  [TSKCAT] : Mode of operation: \\t [ymal-mode] \n        print  [TSKCAT] : Configuration yml: \\t [%s]  % args.config_yml\n\n\n        test_list = tcat_obj.validate_yaml(args.config_yml)\n\n# Load ymal into local tcat config\n        with open(tcat_obj.get_config(), 'r') as cfg:\n            tcat_cfg = yaml.safe_load(cfg.read())\n        cfg.close()\n\n        tcat_obj.s3upload(tcat_cfg)\n        tcat_obj.validate_template(tcat_cfg, test_list)\n        tcat_obj.validate_parameters(tcat_cfg, test_list)\n        stackinfo = tcat_obj.stackcreate(tcat_cfg, test_list, 'tonyv')\n        tcat_obj.get_stackstatus(stackinfo , 5)\n\n# --End\n# Finish run in ymal mode\n\nmain()", 
            "title": "Example code to instantiate TaskCat"
        }, 
        {
            "location": "/#to-run-taskcat", 
            "text": "python tcat.py    See below for available flags (you need to pass as input -c at minimum)", 
            "title": "To run taskcat"
        }, 
        {
            "location": "/#taskcat-cli-flags", 
            "text": "-h, --help   show this help message and exit\n  -c CONFIG_YML, --config_yml CONFIG_YML [Configuration yaml] Read configuration from config.yml\n  -P BOTO_PROFILE, --boto-profile BOTO_PROFILE Authenticate using boto profile\n  -A AWS_ACCESS_KEY, --aws_access_key AWS_ACCESS_KEY AWS Access Key\n  -S AWS_SECRET_KEY, --aws_secret_key AWS_SECRET_KEY AWS Secret Key\n  -ey, --example_yaml  Prints out example yaml\n  -v, --verbose  Enables verbosity", 
            "title": "TaskCat CLI Flags"
        }, 
        {
            "location": "/#help", 
            "text": "If you need help you can reach out to via tonynv@amazon.com  Enjoy!", 
            "title": "Help"
        }
    ]
}